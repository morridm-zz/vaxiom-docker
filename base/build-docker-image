#!/usr/bin/env bash

#Setup env variables
HOME_DIR=`pwd`
CENTOS_SRC_DIR="centos/"
ssh_key=id_rsa_pub
DOCK_USER="vaxiom"
container=$1
tag=$2

###Usage: ./build-docker-image centos latest $HOME/$USER/.ssh/id_rsa.pub
usage() {
	local RC=0
	[[ $# -lt 2 ]] && echo "$(basename $0) <container name> <tag> [ssh pub key]" && RC=1
	return $RC
}

# Common function to see if a file exists
does_file_exists(){
	local f="$1"
	[[ -f "$f" ]] && return 0 || return 1
}

wrapUp() {
	cd $HOME_DIR
}

genSSHKeys() {
	local RC=1
	[[ $# -eq 3 ]] && ssh_key=$3

	if [[ ! -f $ssh_key ]]; then
	    echo "No public ssh key found. Generating a new ssh key"
	    echo ""

	    ssh-keygen -q -t rsa -N "" -f id_rsa
	    if [ $? -eq 0 ];then	   
		if [ -f "id_rsa" ];then
			if [ -f "id_rsa.pub" ];then
			    RC=0
	    		fi	    
	    	fi
	    else
	    	echo "ERROR:  Unable to generate rsa keys:  ssh-keygen -q -t rsa -N "" -f id_rsa"
	    fi		    	    
	else
		RC=0
	fi
	
	return $RC
}

dockerBuild() {
	local RC=1
	
	sudo docker build -t $DOCK_USER/$container:$tag .
	if [ $? -eq 0 ];then	   
		echo "INFO:  Docker image built using: sudo docker build -t $DOCK_USER/$container:$tag ."
		RC=0
	else
		echo "ERROR:  building docker image: docker build -t $DOCK_USER/$container:$tag ."			
	fi
	
	return $RC
}

main() {
	if [ -d "$CENTOS_SRC_DIR" ];then
		cd $CENTOS_SRC_DIR
		genSSHKeys	
		if ( dockerBuild )
		then
			echo "SUCCESS:  Job completed without errors."
		else
			echo "ERROR: An error occurred... oops"
		fi
	else
		echo "ERROR: Unable to locate directory: $CENTOS_SRC_DIR"
	fi
}

main
wrapUp

